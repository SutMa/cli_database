The following is the database schema for reference:

CREATE TABLE Users (
  UserID INT AUTO_INCREMENT PRIMARY KEY,
  Username VARCHAR(255) NOT NULL UNIQUE,
  Email VARCHAR(255) NOT NULL UNIQUE,
  Password VARCHAR(255) NOT NULL,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE BlogPosts (
  PostID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT,
  Title VARCHAR(255) NOT NULL,
  Content TEXT NOT NULL,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE
);
CREATE TABLE Likes (
  LikeID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT,
  PostID INT,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
  FOREIGN KEY (PostID) REFERENCES BlogPosts(PostID) ON DELETE CASCADE
);
CREATE TABLE Dislikes (
  DislikeID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT,
  PostID INT,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
  FOREIGN KEY (PostID) REFERENCES BlogPosts(PostID) ON DELETE CASCADE
);
CREATE TABLE Comments (
  CommentID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT,
  PostID INT,
  CommentText TEXT NOT NULL,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
  FOREIGN KEY (PostID) REFERENCES BlogPosts(PostID) ON DELETE CASCADE
);
CREATE TABLE CommentLikes (
  CommentLikeID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT,
  CommentID INT,
  IsLike BOOLEAN,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE KEY (UserID, CommentID),
  FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
  FOREIGN KEY (CommentID) REFERENCES Comments(CommentID) ON DELETE CASCADE
);
CREATE TABLE CommentDislikes (
  CommentDislikeID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT,
  CommentID INT,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE KEY (UserID, CommentID),
  FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
  FOREIGN KEY (CommentID) REFERENCES Comments(CommentID) ON DELETE CASCADE
);



